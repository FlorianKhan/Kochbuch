openapi: 3.0.0
info:
  title: Mein digitales Kochbuch
  version: '1.0'
  description: 'Mein digitales Kochbuch nutzt einen simplen REST-Webservices zur Kommunikation mit dem Backend. Mit diesem ist es möglich, Rezepte zu bearbeiten, hinzuzufügen und zu löschen. Diese bestehen aus dem Rezeptnamen, der Zubereitungsdauer, dem Schwierigkeitsgrad, den Zutaten und der Zubereitungsbeschreibung. Rezepte können außerdem den Favoriten hinzugefügen aber auch von diesen entfernt werden. Außerdem könenn Zutaten der Einkaufsliste hinzugefügt und entfernt werden. Den Rezepten können klassischerweise auch Bewertungen zugeordnet werden, welche hinzugefügt, bearbeitet und gelöscht werden können.'
  contact:
    name: 'Angelika K., Florian K., Marco P., Rebecca P.'
servers:
  - url: 'http://localhost:3000'
paths:
  /:
    get:
      summary: Wurzeladresse des Webservice zum HATEOAS Abruf seiner Collections
      tags:
        - Index
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HATEOAS_Collection'
      operationId: get
      description: HATEAOS-Links mit den Collections abrufen
  /rezept:
    get:
      summary: Rezept suchen
      tags:
        - Rezeptliste
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rezept'
      operationId: get-rezept
      description: Rezept lesen
      parameters:
        - schema:
            type: string
          in: query
          name: rezeptname
          description: Gesuchter Rezeptname
        - schema:
            type: string
          in: query
          name: dauer
          description: Gesuchte Zubereitungsdauer
        - schema:
            type: string
          in: query
          name: schwierigkeitsgrad
          description: Gesuchte Schwierigkeitsgrad
        - schema:
            type: string
          in: query
          name: zutaten
          description: Gesuchte Zutaten
        - schema:
            type: string
          in: query
          name: zubereitung
          description: Gesuchte Zubereitung
    post:
      summary: Rezept anlegen
      tags:
        - Rezeptliste
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rezept'
          headers:
            Location:
              schema:
                type: string
              description: URL des angelegten Datensatzes
      operationId: post-rezept
      description: Rezept anlegen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rezept'
        description: Daten des anzulegenden Rezeptes
  '/rezept/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Rezept lesen
      tags:
        - Rezept
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rezept'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: get-rezept-id
      description: Ließt ein Rezept vom Server
    put:
      summary: Rezept bearbeiten
      tags:
        - Rezept
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rezept'
        '404':
          description: Not Found
      operationId: put-rezept-id
      description: 'Rezeptdatensatz bearbeiten. Es könne alle Felder geändert werden, mit ausnahme der id des Datensatzes. Der Versuch, die id zu ändern, wird vom Server stillschweigend ignoriert.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rezept'
        description: ''
    patch:
      summary: Rezept einzelne Felder ändern
      tags:
        - Rezept
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rezept'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: patch-rezept-id
      description: 'Rezeptdatensatz bearbeiten. Es könne einzelne Felder geändert werden, mit ausnahme der id des Datensatzes. Der Versuch, die id zu ändern, wird vom Server stillschweigend ignoriert.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rezept'
    delete:
      summary: Rezept entfernen
      tags:
        - Rezept
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      operationId: delete-rezept-id
      description: Gewähltes Rezept wird gelöscht
  /bewertung:
    get:
      summary: Bewertung ansehen
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bewertung'
      operationId: get-bewertung
      description: Bewertung lesen
      tags:
        - Bewertungsliste
      parameters:
        - schema:
            type: string
          in: query
          name: rezeptname
          description: Gesuchter Rezeptname
        - schema:
            type: string
          in: query
          name: bewertungstitel
          description: Gesuchter Bewertungstitel
        - schema:
            type: string
          in: query
          name: bepunktung
          description: Gesuchte Bepunktung
        - schema:
            type: string
          in: query
          name: bewertungstext
          description: Gesuchter Bewertungstext
    post:
      summary: Bewertung anlegen
      tags:
        - Bewertung
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bewertung'
          headers:
            Location:
              schema:
                type: string
              description: URL des angelegten Datensatzes
      operationId: post-bewertung
      description: Bewertung anlegen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bewertung'
        description: Daten der anzulgenden Bewertung
    parameters: []
  '/bewertung/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Bewertung lesen
      tags:
        - Bewertung
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bewertung'
        '404':
          description: Not Found
      operationId: get-bewertung-id
      description: Einzelnes Rezept vom Server lesen
    put:
      summary: Bewertung bearbeiten
      tags:
        - Bewertung
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bewertung'
        '404':
          description: Not Found
      operationId: put-bewertung-id
      description: 'Bewertungsdatensatz bearbeiten. Es könne alle Felder geändert werden, mit ausnahme der id des Datensatzes. Der Versuch, die id zu ändern, wird vom Server stillschweigend ignoriert.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bewertung'
    delete:
      summary: Bewertung löschen
      tags:
        - Bewertung
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      operationId: delete-bewertung-id
      description: Bewerungsdatensatz löschen
    patch:
      summary: Bewertung einzelne Felder ändern
      tags:
        - Bewertung
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bewertung'
        '404':
          description: Not Found
      operationId: patch-bewertung-id
      description: 'Bewertungsdatensatz bearbeiten. Es könne einzelne Felder geändert werden, mit ausnahme der id des Datensatzes. Der Versuch, die id zu ändern, wird vom Server stillschweigend ignoriert.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bewertung'
  /favoriten:
    get:
      summary: Favoriten lesen
      tags:
        - Favoritenliste
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Favoriten'
      operationId: get-favoriten
      description: Favoriten lesen
      parameters:
        - schema:
            type: string
          in: query
          name: rezeptname
          description: Gesuchter Rezeptname
    post:
      summary: ''
      operationId: post-favoriten
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
              description: URL des angelegten Datensatzes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favoriten'
      description: Favorit anlegen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Favoriten'
        description: Daten des anzulegenden Favorits
  '/favoriten/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Favorit lesen
      tags:
        - Favorit
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favoriten'
        '404':
          description: Not Found
      operationId: get-favoriten-id
      description: Ließt ein Favorit vom Server
    delete:
      summary: Favorit löschen
      tags:
        - Favorit
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      operationId: delete-favoriten-id
      description: Gewählter Favorit löschen
  /einkaufsliste:
    get:
      summary: Einkaufsliste anschauen
      tags:
        - Einkaufsliste
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Einkaufsliste'
      operationId: get-einkaufsliste
      description: Einkaufsliste lesen
      parameters:
        - schema:
            type: string
          in: query
          name: rezeptname
          description: Gesuchter Rezeptname
        - schema:
            type: string
          in: query
          name: zutaten
          description: Gesuchte Zutaten
    post:
      summary: ''
      operationId: post-einkaufsliste
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
              description: URL des angelegten Datensatzes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Einkaufsliste'
      description: Einkauf anlegen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Einkaufsliste'
        description: Daten des anzulegenden Einkaufs
  '/einkaufsliste/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Rezept aus Einkaufliste lesen
      tags:
        - Einkauf
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Einkaufsliste'
        '404':
          description: Not Found
      operationId: get-einkaufsliste-id
      description: Einzelner Einkauf von Server lesen
    delete:
      summary: Rezept aus Einkaufliste löschen
      tags:
        - Einkauf
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
      operationId: delete-einkaufsliste-id
      description: Gewählter Einkauf löschen
components:
  schemas:
    Rezept:
      title: Rezept
      type: object
      description: Ein Rezept
      properties:
        _links:
          $ref: '#/components/schemas/HATEOAS_Ressource'
        _id:
          type: string
        rezeptname:
          type: string
        dauer:
          type: string
        schwierigkeitsgrad:
          type: string
        zutaten:
          type: string
        zubereitung:
          type: string
    HATEOAS_Collection:
      title: HATEOAS_Collection
      type: object
      properties:
        _name:
          type: string
        query:
          $ref: '#/components/schemas/HATEOAS_Link'
        create:
          $ref: '#/components/schemas/HATEOAS_Link'
      description: HATEOAS-Links einer Collection
    HATEOAS_Ressource:
      title: HATEOAS_Ressource
      type: object
      description: HATEOAS Links einer Ressource
      properties:
        read:
          $ref: '#/components/schemas/HATEOAS_Link'
        upadate:
          $ref: '#/components/schemas/HATEOAS_Link'
        patch:
          $ref: '#/components/schemas/HATEOAS_Link'
        delete:
          $ref: '#/components/schemas/HATEOAS_Link'
    HATEOAS_Link:
      title: HATEOAS_Link
      type: object
      properties:
        url:
          type: string
        method:
          type: string
        query_params:
          type: array
          items:
            type: string
      description: HATEOAS Links
    Einkaufsliste:
      title: Einkaufsliste
      type: object
      properties:
        _id:
          type: string
        rezeptname:
          type: string
        zutaten:
          type: string
      description: Einkaufsliste mit Zutaten der Rezepte.
    Favoriten:
      title: Favoriten
      type: object
      properties:
        _id:
          type: string
        rezeptname:
          type: string
      description: Liste der favorisierten Rezepten.
    Bewertung:
      title: Bewertung
      type: object
      description: Bewertung eines Rezeptes.
      properties:
        _links:
          $ref: '#/components/schemas/HATEOAS_Ressource'
        _id:
          type: string
        rezeptname:
          type: string
        bewertungstitel:
          type: string
        bepunktung:
          type: string
        bewertungstext:
          type: string
tags:
  - name: Bewertung
  - name: Bewertungsliste
  - name: Einkauf
  - name: Einkaufsliste
  - name: Favorit
  - name: Favoritenliste
  - name: Index
  - name: Rezept
  - name: Rezeptliste
